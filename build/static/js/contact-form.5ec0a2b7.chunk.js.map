{"version":3,"file":"static/js/contact-form.5ec0a2b7.chunk.js","mappings":"6QAEaA,EAAUC,EAAAA,GAAAA,IAAH,sBAEPC,EAAQD,EAAAA,GAAAA,GAAH,0FAMLE,EAAOF,EAAAA,GAAAA,KAAH,yHAOJG,EAAQH,EAAAA,GAAAA,MAAH,6FAMLI,EAAQJ,EAAAA,GAAAA,MAAH,0SAeLK,EAAUL,EAAAA,GAAAA,OAAH,kkB,SCmDpB,MAxEA,WACE,OAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,cAAlBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MAED,SAATd,GACFC,EAAQa,GAEG,WAATd,GACFG,EAAUW,IAkBRC,EAAQ,WACZd,EAAQ,IACRE,EAAU,KAEZ,OACE,UAACX,EAAD,YACE,SAACE,EAAD,kCACA,UAACC,EAAD,CAAMqB,SArBW,SAACJ,GACpBA,EAAEK,iBAEF,IAAMC,EAAkBd,EAASe,MAAK,SAACC,GAAD,OAAapB,IAASoB,EAAQpB,QAEpE,GAAIkB,EAEF,OADAH,IACOM,MAAM,GAAD,OAAIrB,EAAJ,4BAEd,IAAMoB,EAAU,CAAEpB,KAAAA,EAAME,OAAAA,GACxBO,GAASa,EAAAA,EAAAA,IAAWF,IACpBL,KAUE,WACE,SAACnB,EAAD,WACE,SAACC,EAAD,CACE0B,YAAY,OACZC,aAAa,OACbC,KAAK,OACLzB,KAAK,OACL0B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRd,MAAOd,EACP6B,SAAUlB,OAGd,SAACf,EAAD,WACE,SAACC,EAAD,CACE0B,YAAY,SACZC,aAAa,OACbC,KAAK,MACLzB,KAAK,SACL0B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRd,MAAOZ,EACP2B,SAAUlB,OAGd,SAACb,EAAD,CAAS2B,KAAK,SAAd,SAAwBlB,EAAY,SAAW","sources":["сomponents/ContactForm/ContactForm.styled.js","сomponents/ContactForm/ContactForm.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div``;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n  text-align: center;\n  color: #7b68ee;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 300px;\n  padding: 5px;\n\n  outline: 0;\n  background: transparent;\n  color: #212529;\n  background-color: #fff;\n  border: 0;\n  border-bottom: 2px solid #483d8b;\n\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n`;\n\nexport const FormBtn = styled.button`\n  display: inline-block;\n  padding: 5px 8px;\n  outline: none;\n  cursor: pointer;\n  font-size: 10px;\n  line-height: 1;\n  border-radius: 200px;\n  transition-property: background-color, border-color, color, box-shadow, filter;\n  transition-duration: 0.3s;\n  border: 1px solid transparent;\n  letter-spacing: 2px;\n  min-width: 100px;\n  text-transform: uppercase;\n  white-space: normal;\n  font-weight: 700;\n  text-align: center;\n\n  color: white;\n  background-color: #7b68ee;\n  height: 28px;\n  :hover {\n    background-color: #483d8b;\n  }\n`;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport {\n  getContacts,\n  getLoading,\n} from \"../../redux/phonebook/phonebook-selectors\";\nimport { addContact } from \"../../redux/phonebook/phonebook-operations\";\n\nimport {\n  Wrapper,\n  Title,\n  Form,\n  Label,\n  Input,\n  FormBtn,\n} from \"./ContactForm.styled\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getLoading);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    if (name === \"name\") {\n      setName(value);\n    }\n    if (name === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const existingContact = contacts.find((contact) => name === contact.name);\n\n    if (existingContact) {\n      reset();\n      return alert(`${name} is already in contacts`);\n    }\n    const contact = { name, number };\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <Wrapper>\n      <Title>Create new contact</Title>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          <Input\n            placeholder=\"Name\"\n            autoComplete=\"true\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </Label>\n        <Label>\n          <Input\n            placeholder=\"Number\"\n            autoComplete=\"true\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </Label>\n        <FormBtn type=\"submit\">{isLoading ? \"Adding\" : \"Add contact\"}</FormBtn>\n      </Form>\n    </Wrapper>\n  );\n}\n\nexport default ContactForm;\n"],"names":["Wrapper","styled","Title","Form","Label","Input","FormBtn","useState","name","setName","number","setNumber","contacts","useSelector","getContacts","isLoading","getLoading","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","existingContact","find","contact","alert","addContact","placeholder","autoComplete","type","pattern","title","required","onChange"],"sourceRoot":""}