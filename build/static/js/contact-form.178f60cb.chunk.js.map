{"version":3,"file":"static/js/contact-form.178f60cb.chunk.js","mappings":"6QAEaA,EAAUC,EAAAA,GAAAA,IAAH,4BAKPC,EAAQD,EAAAA,GAAAA,GAAH,iFAMLE,EAAOF,EAAAA,GAAAA,KAAH,8HAUJG,EAAQH,EAAAA,GAAAA,MAAH,oGAQLI,EAAQJ,EAAAA,GAAAA,MAAH,mTAiBLK,EAAUL,EAAAA,GAAAA,OAAH,k9B,SCkCpB,MA3EA,WACE,OAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,cAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MAED,SAATZ,GACFC,EAAQW,GAEG,WAATZ,GACFG,EAAUS,IAkBRC,EAAQ,WACZZ,EAAQ,IACRE,EAAU,KAEZ,OACE,UAACX,EAAD,YACE,SAACE,EAAD,kCACN,UAACC,EAAD,CAAMmB,SArBiB,SAACJ,GACpBA,EAAEK,iBAEF,IAAMC,EAAkBZ,EAASa,MAAK,SAACC,GAAD,OAAalB,IAASkB,EAAQlB,QAEpE,GAAIgB,EAEF,OADAH,IACOM,MAAM,GAAD,OAAInB,EAAJ,4BAEd,IAAMkB,EAAU,CAAElB,KAAAA,EAAME,OAAAA,GACxBK,GAASa,EAAAA,EAAAA,IAAWF,IACpBL,KAUJ,WACM,SAACjB,EAAD,WAEE,SAACC,EAAD,CACEwB,YAAY,OACZC,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRb,MAAOZ,EACP0B,SAAUjB,OAGd,SAACb,EAAD,WAEE,SAACC,EAAD,CACEwB,YAAY,SACZC,KAAK,MACLtB,KAAK,SACLuB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRb,MAAOV,EACPwB,SAAUjB,OAGd,SAACX,EAAD,CAASwB,KAAK,SAAd","sources":["сomponents/ContactForm/ContactForm.styled.js","сomponents/ContactForm/ContactForm.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n\n\n`\n\nexport const Title = styled.h1`\nmargin-bottom:20px;\ntext-align:center;\ncolor:#7B68EE;\n`\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content:center;\n  align-items:center;\n  flex-direction: column;\n\n \n\n`\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom:20px;\n  \n\n  `\n\nexport const Input = styled.input`\n display: block;\n  width: 300px;\n  padding: 5px;\n\n  outline: 0;\n    background: transparent;\n  color: #212529;\n  background-color: #fff;\n  border:0;\n  border-bottom: 2px solid #483D8B;\n  \n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n   \n  `\n\n\nexport const FormBtn = styled.button`\n  display: inline-block;\n  padding:5px 8px;\n                    outline: none;\n                    cursor: pointer;\n                    font-size: 10px;\n                    line-height: 1;\n                    border-radius: 200px;\n                    transition-property: background-color,border-color,color,box-shadow,filter;\n                    transition-duration: .3s;\n                    border: 1px solid transparent;\n                    letter-spacing: 2px;\n                    min-width: 100px;\n                    text-transform: uppercase;\n                    white-space: normal;\n                    font-weight: 700;\n                    text-align: center;\n                   \n                     color: white;\n                    background-color: #7B68EE;\n                    height: 28px;\n                    :hover{\n                        background-color: #483D8B;\n                       \n                    }\n`","import { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { getContacts } from \"../../redux/phonebook/phonebook-selectors\";\nimport { addContact } from \"../../redux/phonebook/phonebook-operations\";\n\nimport{Wrapper, Title, Form, Label, Input, FormBtn} from './ContactForm.styled'\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    if (name === \"name\") {\n      setName(value);\n    }\n    if (name === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const existingContact = contacts.find((contact) => name === contact.name);\n\n    if (existingContact) {\n      reset();\n      return alert(`${name} is already in contacts`);\n    }\n    const contact = { name, number };\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <Wrapper>\n      <Title>Create new contact</Title>\n<Form onSubmit={handleSubmit}>\n      <Label >\n        \n        <Input\n          placeholder=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label >\n       \n        <Input\n          placeholder=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <FormBtn type=\"submit\">\n        Add contact\n        {/* {isLoading?'Adding':'Add contact'} */}\n      </FormBtn>\n    </Form>\n\n    </Wrapper>\n  );\n}\n\nexport default ContactForm;\n"],"names":["Wrapper","styled","Title","Form","Label","Input","FormBtn","useState","name","setName","number","setNumber","contacts","useSelector","getContacts","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","existingContact","find","contact","alert","addContact","placeholder","type","pattern","title","required","onChange"],"sourceRoot":""}